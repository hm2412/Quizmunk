# Generated by Django 5.1.2 on 2025-03-20 02:19

import app.models.room
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='GuestAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom_code', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_classroom_code', message='Classroom code must be alphanumeric.', regex='^[a-zA-Z0-9]*$')])),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email_address', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('tutor', 'Tutor')], default='student', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email_address'],
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('tutor', models.ForeignKey(limit_choices_to={'role': 'tutor'}, on_delete=django.db.models.deletion.CASCADE, related_name='tutor_classrooms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('subject', models.CharField(blank=True, max_length=50)),
                ('difficulty', models.CharField(blank=True, choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], max_length=1)),
                ('type', models.CharField(blank=True, choices=[('L', 'Live'), ('R', 'Releasable')], max_length=1)),
                ('is_public', models.BooleanField(default=False, help_text='If true, quiz will be visible to all tutors')),
                ('quiz_img', models.ImageField(blank=True, default='quiz_images/default_quiz.png', null=True, upload_to='quiz_images/')),
                ('tutor', models.ForeignKey(help_text='The tutor that creates this quiz.', limit_choices_to={'role': 'Tutor'}, on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to=settings.AUTH_USER_MODEL, verbose_name='Related tutor')),
            ],
        ),
        migrations.CreateModel(
            name='NumericalRangeQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('min_value', models.FloatField()),
                ('max_value', models.FloatField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numerical_range_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('options', models.JSONField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IntegerInputQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('correct_answer', models.IntegerField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integer_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DecimalInputQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('correct_answer', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decimal_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Rooms must have a name', max_length=50)),
                ('join_code', models.CharField(default=app.models.room.generate_join_code, editable=False, max_length=8, unique=True)),
                ('quiz_started', models.BooleanField(default=False)),
                ('current_question_index', models.PositiveIntegerField(default=0)),
                ('is_quiz_active', models.BooleanField(default=False)),
                ('classroom', models.ForeignKey(blank=True, help_text='The Classroom associated with this room', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locked_rooms', to='app.classroom')),
                ('quiz', models.ForeignKey(blank=True, help_text='The quiz this room is made from.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room_set', to='app.quiz', verbose_name='Current quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_question_index', models.IntegerField(default=0)),
                ('quiz_started', models.BooleanField(default=False)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.PositiveIntegerField()),
                ('responses_received', models.IntegerField()),
                ('correct_responses', models.IntegerField()),
                ('percentage_correct', models.DecimalField(decimal_places=2, max_digits=5)),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
        ),
        migrations.CreateModel(
            name='NumericalRangeResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.IntegerField()),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.numericalrangequestion')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.CharField(max_length=255)),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.multiplechoicequestion')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IntegerInputResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.IntegerField()),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.integerinputquestion')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DecimalInputResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.DecimalField(decimal_places=2, max_digits=10)),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.decimalinputquestion')),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SortingQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('items', models.TextField()),
                ('correct_answer', models.CharField(max_length=200)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sorting_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SortingResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.CharField(max_length=255)),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.sortingquestion')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_played', models.DateTimeField(auto_now_add=True)),
                ('num_participants', models.IntegerField()),
                ('mean_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('median_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.quiz')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
        ),
        migrations.CreateModel(
            name='TextInputQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('correct_answer', models.TextField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextInputResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.CharField(max_length=255)),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.textinputquestion')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrueFalseQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('time', models.PositiveIntegerField(default=30)),
                ('mark', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions_images/')),
                ('correct_answer', models.BooleanField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='true_false_questions', to='app.quiz')),
            ],
            options={
                'ordering': ['position'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrueFalseResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('answer', models.BooleanField()),
                ('guest_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.truefalsequestion')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassroomInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=10)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.classroom')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='classroom_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('classroom', 'student')},
            },
        ),
        migrations.CreateModel(
            name='ClassroomStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='app.classroom')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='student_classrooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('classroom', 'student')},
            },
        ),
        migrations.CreateModel(
            name='RoomParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.IntegerField(default=0)),
                ('guest_access', models.ForeignKey(blank=True, help_text='Guest access session for the participant.', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.guestaccess', verbose_name='Guest Access')),
                ('room', models.ForeignKey(help_text='The room this participant belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='app.room', verbose_name='Room')),
                ('user', models.ForeignKey(blank=True, help_text='A registered user participating in the room.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('guest_access__isnull', True), ('user__isnull', False)), models.Q(('guest_access__isnull', False), ('user__isnull', True)), _connector='OR'), name='user_xor_guest')],
            },
        ),
    ]
